{"version":3,"sources":["ProductItem.js","AddProduct.js","App.js","serviceWorker.js","index.js"],"names":["ProductItem","props","state","isEdit","onDelete","bind","onEdit","onEditSubmit","this","name","setState","event","preventDefault","nameInput","value","priceInput","price","onSubmit","placeholder","ref","defaultValue","onClick","Component","AddProduct","onAdd","localStorage","setItem","JSON","stringify","App","products","parse","getItem","getProducts","push","filteredProducts","filter","productTemp","originalName","map","product","className","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ca48674d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass ProductItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      //default is false, meaning no text box shows to edit\r\n      isEdit: false,\r\n    };\r\n\r\n    this.onDelete = this.onDelete.bind(this);\r\n    this.onEdit = this.onEdit.bind(this);\r\n    this.onEditSubmit = this.onEditSubmit.bind(this);\r\n  }\r\n\r\n  onDelete() {\r\n    const { onDelete, name } = this.props;\r\n\r\n    onDelete(name);\r\n  }\r\n\r\n  onEdit() {\r\n    // edit box comes up when click 'edit button'\r\n    this.setState({ isEdit: true });\r\n  }\r\n\r\n  onEditSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    this.props.onEditSubmit(\r\n      this.nameInput.value,\r\n      this.priceInput.value,\r\n      this.props.name\r\n    );\r\n\r\n    this.setState({ isEdit: false }); // edit box goes away after click 'save button'\r\n  }\r\n\r\n  render() {\r\n    const { name, price } = this.props;\r\n    return (\r\n      <div>\r\n        {this.state.isEdit ? (\r\n          <form onSubmit={this.onEditSubmit}>\r\n            <input\r\n              placeholder=\"Name\"\r\n              ref={(nameInput) => (this.nameInput = nameInput)}\r\n              defaultValue={name}\r\n            />\r\n            <input\r\n              placeholder=\"Price\"\r\n              ref={(priceInput) => (this.priceInput = priceInput)}\r\n              defaultValue={price}\r\n            />\r\n            <button>Save</button>\r\n          </form>\r\n        ) : (\r\n          <div>\r\n            <span>{name}</span>\r\n            {\"|\"}\r\n            <span>{price}</span>\r\n            {\"|\"}\r\n            <button onClick={this.onEdit}>Edit</button>\r\n            {\"|\"}\r\n            <button onClick={this.onDelete}>Delete</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductItem;\r\n","import React, { Component } from \"react\";\r\n\r\nclass AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    this.props.onAdd(this.nameInput.value, this.priceInput.value);\r\n\r\n    this.nameInput.value = \"\";\r\n    this.priceInput.value = \"\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <h3>Add Product</h3>\r\n        <input\r\n          placeholder=\"Name\"\r\n          ref={(nameInput) => (this.nameInput = nameInput)}\r\n        />\r\n        <input\r\n          placeholder=\"Price\"\r\n          ref={(priceInput) => (this.priceInput = priceInput)}\r\n        />\r\n        <button>Add</button>\r\n\r\n        <hr />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddProduct;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ProductItem from \"./ProductItem\";\nimport AddProduct from \"./AddProduct\";\n\nconst products = [\n  {\n    name: \"iPad\",\n    price: 200,\n  },\n  {\n    name: \"iPhone\",\n    price: 650,\n  },\n];\n\nlocalStorage.setItem(\"CreateProducts\", JSON.stringify(products));\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      products: JSON.parse(localStorage.getItem(\"CreateProducts\")),\n    };\n\n    this.onDelete = this.onDelete.bind(this);\n    this.onAdd = this.onAdd.bind(this);\n    this.onEditSubmit = this.onEditSubmit.bind(this);\n  }\n\n  componentWillMount() {\n    const products = this.getProducts();\n\n    this.setState({ products });\n  }\n\n  getProducts() {\n    return this.state.products;\n  }\n\n  onAdd(name, price) {\n    const products = this.getProducts();\n\n    products.push({\n      name,\n      price,\n    });\n\n    this.setState({ products });\n  }\n\n  onDelete(name) {\n    const products = this.getProducts();\n\n    const filteredProducts = products.filter((productTemp) => {\n      return productTemp.name !== name;\n    });\n\n    this.setState({ products: filteredProducts });\n  }\n\n  onEditSubmit(name, price, originalName) {\n    let products = this.getProducts();\n\n    products = products.map((product) => {\n      if (product.name === originalName) {\n        product.name = name;\n        product.price = price;\n      }\n\n      return product;\n    });\n\n    this.setState({ products });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Products Manager</h1>\n\n        <AddProduct onAdd={this.onAdd} />\n\n        {this.state.products.map((productTemp) => {\n          return (\n            <ProductItem\n              key={productTemp.name}\n              {...productTemp}\n              onDelete={this.onDelete}\n              onEditSubmit={this.onEditSubmit}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}